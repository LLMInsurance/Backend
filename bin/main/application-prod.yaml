spring:
  datasource:
    url: ${DATABASE_URL:jdbc:postgresql://localhost:5432/llminsurance}
    username: ${DATABASE_USERNAME:anhongbeom}
    password: ${DATABASE_PASSWORD:password}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000

  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: false
        jdbc:
          lob:
            non_contextual_creation: true

# OpenAI 설정
openai:
  api:
    key: ${OPENAI_API_KEY}
    base-url: https://api.openai.com/v1

# JWT 설정
jwt:
  secret: ${JWT_SECRET}
  expiration: ${JWT_EXPIRATION:86400000}

# CORS 설정
cors:
  allowed-origins: ${CORS_ALLOWED_ORIGINS:*}
  allowed-methods: ${CORS_ALLOWED_METHODS:GET,POST,PUT,DELETE,OPTIONS}
  allowed-headers: ${CORS_ALLOWED_HEADERS:*}

# 로깅 설정
logging:
  level:
    com.example.LLMInsurance_Backend: INFO
    org.springframework.security: WARN
    org.hibernate.SQL: WARN
  pattern:
    console: "%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"

# 서버 설정
server:
  port: ${PORT:8080}
  shutdown: graceful

# 액추에이터 설정 (모니터링용)
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: when-authorized 